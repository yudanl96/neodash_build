{"version":3,"file":"189.bundle.js","mappings":"gvHAeY,oCAVZ,WAKO,IAAMA,EAA8B,SAAH,GAA4E,IAAtEC,EAAY,EAAZA,aAAcC,EAAmB,EAAnBA,oBAAqBC,EAA4B,EAA5BA,6BAK/E,OAL2G,sBAGzG,WAGA,2BACE,gBAAC,IAAM,CACLC,KAAK,QACLC,MAAM,mBAAiBC,IAAjBL,IAA0B,eAAsC,IAAlCA,EAAaM,mBACjD,kBAAgB,qBAEhB,gBAAC,IAAOC,OAAM,CAACC,GAAG,qBAChB,gBAAC,IAA8B,CAC7BC,UAAU,+BACVC,MAAO,CAAEC,QAAS,SAAUC,YAAa,MAAOC,aAAc,SAC9D,qBAGJ,gBAAC,IAAOC,QAAO,UACKT,IAAjBL,GAA8B,IAAJ,UACzB,gCAAE,qCAEA,4BACC,cAAAA,IAAY,cAAIA,EAAae,MAAG,cAC/B,gCAAE,4BACyB,0BAAI,cAAAf,IAAY,cAAIA,EAAae,OAAQ,OACjE,cAEH,gCAAE,2DAEJ,2BAAM,IAAC,2BAAM,mEAEZ,cAEH,gCACE,2BACA,2BACA,8BAIN,gBAAC,IAAOC,QAAO,KACb,gBAAC,IAAM,CACLC,QAAS,WAAM,sBA3CC,sBACxBhB,GA4CQ,EACAiB,KAAK,WACLR,MAAO,CAAES,MAAO,UAEhB,gBAAC,IAAoB,CAACV,UAAU,oBAAoB,UAGtD,gBAAC,IAAM,CACLQ,QAAS,WAAM,sBACbf,GACF,EACAQ,MAAO,CAAES,MAAO,QAASP,YAAa,OACtCQ,MAAM,WACP,WAEC,gBAAC,IAAa,CAACX,UAAU,uBAMrC,EAAE,WAEiC,WAInC,SAAeY,EAAAA,EAAAA,KAJS,WAAO,8BAAC,KAEL,WAAO,8BAAC,IAEnC,CAA4DtB,E,kBCnF5D,MAAMuB,EAAQ,EAAQ,OAyBhBC,EAAaD,EAAME,YAvBzB,UAAiC,MAC/BC,EAAK,QACLC,KACGC,GACFC,GACD,OAAoBN,EAAMO,cAAc,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPd,KAAM,OACNe,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,EACL,kBAAmBF,GAClBC,GAAQF,EAAqBH,EAAMO,cAAc,QAAS,CAC3DrB,GAAIkB,GACHD,GAAS,KAAmBH,EAAMO,cAAc,OAAQ,CACzDQ,cAAe,QACfC,eAAgB,QAChBC,EAAG,0MAEP,IAGAC,EAAOC,QAAUlB,C","sources":["webpack://neodash/./src/modal/LoadSharedDashboardModal.tsx","webpack://neodash/./node_modules/@heroicons/react/24/outline/AdjustmentsVerticalIcon.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Dialog } from '@neo4j-ndl/react';\nimport { PlayIconSolid, AdjustmentsVerticalIconOutline, BackspaceIconOutline } from '@neo4j-ndl/react/icons';\n\n/**\n * A modal to save a dashboard as a JSON text string.\n * The button to open the modal is intended to use in a drawer at the side of the page.\n */\n\nexport const NeoLoadSharedDashboardModal = ({ shareDetails, onResetShareDetails, onConfirmLoadSharedDashboard }) => {\n  const handleClose = () => {\n    onResetShareDetails();\n  };\n\n  return (\n    <div>\n      <Dialog\n        size='large'\n        open={shareDetails !== undefined && shareDetails.skipConfirmation === false}\n        aria-labelledby='form-dialog-title'\n      >\n        <Dialog.Header id='form-dialog-title'>\n          <AdjustmentsVerticalIconOutline\n            className='icon-base icon-inline text-r'\n            style={{ display: 'inline', marginRight: '5px', marginBottom: '5px' }}\n          />\n          Loading Dashboard\n        </Dialog.Header>\n        <Dialog.Content>\n          {shareDetails !== undefined ? (\n            <>\n              You are loading a Neo4j dashboard.\n              <br />\n              {shareDetails && shareDetails.url ? (\n                <>\n                  You will be connected to <b>{shareDetails && shareDetails.url}</b>.\n                </>\n              ) : (\n                <>You will still need to specify a connection manually.</>\n              )}\n              <br /> <br />\n              This will override your current dashboard (if any). Continue?\n            </>\n          ) : (\n            <>\n              <br />\n              <br />\n              <br />\n            </>\n          )}\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            onClick={() => {\n              handleClose();\n            }}\n            fill='outlined'\n            style={{ float: 'right' }}\n          >\n            <BackspaceIconOutline className='btn-icon-base-l' />\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              onConfirmLoadSharedDashboard();\n            }}\n            style={{ float: 'right', marginRight: '5px' }}\n            color='success'\n          >\n            Continue\n            <PlayIconSolid className='btn-icon-base-r' />\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NeoLoadSharedDashboardModal);\n","const React = require(\"react\");\n\nfunction AdjustmentsVerticalIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 13.5V3.75m0 9.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 3.75V16.5m12-3V3.75m0 9.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 3.75V16.5m-6-9V3.75m0 3.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 9.75V10.5\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(AdjustmentsVerticalIcon);\nmodule.exports = ForwardRef;"],"names":["NeoLoadSharedDashboardModal","shareDetails","onResetShareDetails","onConfirmLoadSharedDashboard","size","open","undefined","skipConfirmation","Header","id","className","style","display","marginRight","marginBottom","Content","url","Actions","onClick","fill","float","color","connect","React","ForwardRef","forwardRef","title","titleId","props","svgRef","createElement","Object","assign","xmlns","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","module","exports"],"sourceRoot":""}