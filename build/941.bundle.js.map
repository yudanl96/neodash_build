{"version":3,"file":"941.bundle.js","mappings":"+mHAeY,gC,4BAAA,IAFZ,WAIO,IAAMA,EAAuB,SAAH,GAQ3B,IAPJC,EAAI,EAAJA,KACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAW,EAAXA,YACAC,EAA0B,EAA1BA,2BACAC,EAAsB,EAAtBA,uBACAC,EAAmB,EAAnBA,oBAEA,OAFmB,sBAGjB,2BACE,gBAAC,IAAM,CACLC,KAAK,QACLP,KAAMA,EACNQ,QAAS,WAAM,sBACTL,GAAa,yBACfG,IAAsB,WAClBF,GAA4B,yBAC9BC,KACD,eACF,aACH,EACA,kBAAgB,oBAChBI,oBAAqBN,GAErB,gBAAC,IAAOO,OAAM,CAACC,GAAG,qBAAqBV,GAEvC,gBAAC,IAAOW,QAAO,CAACC,MAAO,CAAEC,SAAU,WAAY,cAAAZ,IAAI,cAAIA,EAAKa,eAIpE,EAAE,WAQC,WAOH,SAAeC,EAAAA,EAAAA,KAbS,SAACC,GAAW,8BAClCjB,MAAMkB,EAAAA,EAAAA,IAA2BD,GACjCb,4BAA4B,iBAACe,EAAAA,EAAAA,IAAuBF,KAAM,eAAKG,EAAAA,EAAAA,IAAgCH,MAC/FhB,OAAOoB,EAAAA,EAAAA,IAAqBJ,GAC5Bf,MAAMoB,EAAAA,EAAAA,IAAgBL,GACtBd,aAAaoB,EAAAA,EAAAA,IAA6BN,GAC5C,IAE2B,SAACO,GAAc,8BACxClB,oBAAqB,WAAM,8BAAAkB,GAASC,EAAAA,EAAAA,MAAmB,EACvDpB,uBAAwB,WAAM,8BAAAmB,GAASnB,EAAAA,EAAAA,KAAuB,GAAK,EACrE,GAEA,CAA4DN,G","sources":["webpack://neodash/./src/modal/NotificationModal.tsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  applicationHasNotification,\n  applicationHasWelcomeScreenOpen,\n  applicationIsConnected,\n  getNotification,\n  getNotificationIsDismissable,\n  getNotificationTitle,\n} from '../application/ApplicationSelectors';\nimport { clearNotification, setConnectionModalOpen } from '../application/ApplicationActions';\nimport { Dialog } from '@neo4j-ndl/react';\n\n/**\n * A modal to save a dashboard as a JSON text string.\n * The button to open the modal is intended to use in a drawer at the side of the page.\n */\nexport const NeoNotificationModal = ({\n  open,\n  title,\n  text,\n  dismissable,\n  openConnectionModalOnClose,\n  setConnectionModalOpen,\n  onNotificationClose,\n}) => {\n  return (\n    <div>\n      <Dialog\n        size='large'\n        open={open}\n        onClose={() => {\n          if (dismissable) {\n            onNotificationClose();\n            if (openConnectionModalOnClose) {\n              setConnectionModalOpen();\n            }\n          }\n        }}\n        aria-labelledby='form-dialog-title'\n        disableCloseButton={!dismissable}\n      >\n        <Dialog.Header id='form-dialog-title'>{title}</Dialog.Header>\n\n        <Dialog.Content style={{ minWidth: '300px' }}>{text && text.toString()}</Dialog.Content>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  open: applicationHasNotification(state),\n  openConnectionModalOnClose: !applicationIsConnected(state) && !applicationHasWelcomeScreenOpen(state),\n  title: getNotificationTitle(state),\n  text: getNotification(state),\n  dismissable: getNotificationIsDismissable(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onNotificationClose: () => dispatch(clearNotification()),\n  setConnectionModalOpen: () => dispatch(setConnectionModalOpen(true)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NeoNotificationModal);\n"],"names":["NeoNotificationModal","open","title","text","dismissable","openConnectionModalOnClose","setConnectionModalOpen","onNotificationClose","size","onClose","disableCloseButton","Header","id","Content","style","minWidth","toString","connect","state","applicationHasNotification","applicationIsConnected","applicationHasWelcomeScreenOpen","getNotificationTitle","getNotification","getNotificationIsDismissable","dispatch","clearNotification"],"sourceRoot":""}